{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Credits","creditsView","credits","map","credit","date","slice","amount","description","id","submitCredit","event","todayDate","Date","toISOString","userCredit","console","log","addUserCredit","step","Debits","debitsView","debits","debit","submitDebit","userDebit","addUserDebit","App","logInInfo","newUser","currentUser","addDebit","newUserDebit","Number","toFixed","currentDebits","push","newBalance","addCredit","newUserCredit","currentCredits","a","linkToDebitAPI","totalCredits","totalDebits","axios","get","response","data","status","balance","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2039ac44.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","// src/components/Home.js\n// The Home component is used to demonstrate the use of Link.\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <h2><AccountBalance accountBalance={this.props.accountBalance}/></h2>\n      </div>\n    );\n  }\n}\n\nexport default Home;","// src/components/UserProfile.js\n// The UserProfile component is used to demonstrate the use of Route and Link.\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","// src/components/Login.js\n// The LogIn component is used to demonstrate the use of Redirect.\n\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {  // Create and initialize state\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  // When the user name input is changed, capture the input and update the state (user.userName)\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>                  \n      </div>\n    )\n  }\n}\n\nexport default LogIn","// src/components/Credits.js\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Credits extends Component {\n  // Create the list of Credit items\n\tcreditsView = () => {\n    const credits = this.props.credits;\n    return credits.map((credit) => {\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    }) \n  }\n\n  // Add user's credit input to the credits\n  submitCredit = (event) => {\n    let todayDate = new Date().toISOString();\n    let userCredit = {\n      amount: event.target.amount.value,\n      date: todayDate,\n      description: event.target.description.value,\n      id: todayDate\n    }\n    console.log(userCredit);\n    this.props.addUserCredit(userCredit);\n    event.preventDefault();\n  }\n\n  // Render the list of Credit items and a form to input new Credit item\n  render() {\n    return (\n      <div>\n        <h1>Credits</h1>\n        <br/>\n        <h2><AccountBalance accountBalance={this.props.accountBalance}/></h2>\n        <br/>\n        {this.creditsView()}\n        <br/>\n        <form onSubmit={this.submitCredit}> \n          <label htmlFor=\"description\">Description:</label>\n          <input type=\"text\" name=\"description\" />\n          <label htmlFor=\"amount\">Amount:</label>\n          <input type=\"number\" step=\"0.01\" name=\"amount\" />\n          <button type=\"submit\">Add Credit</button>\n        </form>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default Credits;","// src/components/Debits.js\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Debits extends Component {\n  // Create the list of Debit items\n\tdebitsView = () => {\n    const debits = this.props.debits;\n    return debits.map((debit) => {\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    }) \n  }\n\n  // Add user's debit input to the debits\n  submitDebit = (event) => {\n    let todayDate = new Date().toISOString();\n    let userDebit = {\n      amount: event.target.amount.value,\n      date: todayDate,\n      description: event.target.description.value,\n      id: todayDate\n    }\n    console.log(userDebit);\n    this.props.addUserDebit(userDebit);\n    event.preventDefault();\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  render() {\n    return (\n      <div>\n        <h1>Debits</h1>\n        <br/>\n        <h2><AccountBalance accountBalance={this.props.accountBalance}/></h2>\n        <br/>\n        {this.debitsView()}\n        <br/>\n        <form onSubmit={this.submitDebit}> \n          <label htmlFor=\"description\">Description:</label>\n          <input type=\"text\" name=\"description\" />\n          <label htmlFor=\"amount\">Amount:</label>\n          <input type=\"number\" step=\"0.01\" name=\"amount\" />\n          <button type=\"submit\">Add Debit</button>\n        </form>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default Debits;","// src/App.js\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios'; \n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      },\n      credits: [],\n      debits: []\n    }\n  }\n\n  // Make 2 API calls to retrieve credit and debit data\n  async componentDidMount() {\n    let linkToCreditAPI = 'https://moj-api.herokuapp.com/credits'; \n    let linkToDebitAPI = 'https://moj-api.herokuapp.com/debits'; \n    let totalCredits = 0;\n    let totalDebits = 0; \n  \n    // Retrieve Credit data from API\n    try {\n      let response = await axios.get(linkToCreditAPI);\n      console.log(response); \n      this.setState({credits: response.data});\n      // Calculate initial amount of credits\n      for (let credit of this.state.credits) {\n        totalCredits += credit.amount;\n      }\n    } \n    catch (error) {\n      if (error.response) {\n        console.log(error.response.data);  \n        console.log(error.response.status); \n      }    \n    }\n\n    // Retrieve Debit data from API\n    try {\n      let response = await axios.get(linkToDebitAPI);\n      console.log(response); \n      this.setState({debits: response.data});\n      // Calculate initial amount of debits\n      for (let debit of this.state.debits) {\n        totalDebits += debit.amount;\n      }\n    } \n    catch (error) {\n      if (error.response) {\n        console.log(error.response.data);  \n        console.log(error.response.status); \n      }    \n    }\n    // Calculate inital account balance\n    let balance = totalCredits - totalDebits;\n    this.setState({accountBalance: balance.toFixed(2)});\n  }  \n  \n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser});\n  }\n\n  // Update the balance based on user's input of new debits\n  addDebit = (userDebit) => {\n    let newUserDebit = {};\n    newUserDebit.id = userDebit.id;\n    newUserDebit.description = userDebit.description;\n    newUserDebit.amount = Number(userDebit.amount).toFixed(2);\n    newUserDebit.date = userDebit.date;\n    let currentDebits = this.state.debits;\n    currentDebits.push(newUserDebit);\n    this.setState({debits: currentDebits});\n    // Update the account balance\n    let newBalance = Number(this.state.accountBalance) - Number(newUserDebit.amount);\n    this.setState({accountBalance: newBalance.toFixed(2)});\n  }\n\n  // Update the balance based on user's input of new credits\n  addCredit = (userCredit) => {\n    let newUserCredit = {};\n    newUserCredit.id = userCredit.id;\n    newUserCredit.description = userCredit.description;\n    newUserCredit.amount = Number(userCredit.amount).toFixed(2);\n    newUserCredit.date = userCredit.date;\n    let currentCredits = this.state.credits;\n    currentCredits.push(newUserCredit);\n    this.setState({credits: currentCredits});\n    // Update the account balance\n    let newBalance = Number(this.state.accountBalance) + Number(newUserCredit.amount);\n    this.setState({accountBalance: newBalance.toFixed(2)});\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />);  // Pass props to \"LogIn\" component\n    const DebitComponent = () => (<Debits debits={this.state.debits} addUserDebit={this.addDebit} accountBalance={this.state.accountBalance}/>);\n    const CreditComponent = () => (<Credits credits={this.state.credits} addUserCredit={this.addCredit} accountBalance={this.state.accountBalance}/>);\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/my-react-app\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditComponent}/>\n          <Route exact path=\"/debits\" render={DebitComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}